import { Parser, ExternalTokenizer, NestedParser, Stack, NodeProp, ContextTracker } from "lezer";
export declare type BuildOptions = {
    fileName?: string;
    warn?: (message: string) => void;
    includeNames?: boolean;
    moduleStyle?: string;
    exportName?: string;
    externalTokenizer?: (name: string, terms: {
        [name: string]: number;
    }) => ExternalTokenizer;
    externalSpecializer?: (name: string, terms: {
        [name: string]: number;
    }) => (value: string, stack: Stack) => number;
    nestedParser?: (name: string, terms: {
        [name: string]: number;
    }) => NestedParser | Parser;
    externalProp?: (name: string) => NodeProp<any>;
    contextTracker?: ContextTracker<any>;
};
export declare function buildParser(text: string, options?: BuildOptions): Parser;
export declare function buildParserFile(text: string, options?: BuildOptions): {
    parser: string;
    terms: string;
};
